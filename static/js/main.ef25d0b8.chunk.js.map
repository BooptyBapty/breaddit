{"version":3,"sources":["components/Nav.js","components/Loading.js","components/Post.js","components/Posts.js","components/CreatePost.js","components/CreateComment.js","components/Comment.js","components/PostPage.js","components/UserPage.js","components/CreateCommunity.js","components/CommunityPage.js","components/BrowseCommunities.js","icons/404.png","components/NotFound404.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","Fragment","className","to","walletAddress","src","alt","href","slice","length","onClick","setCreatePostModal","xmlns","viewBox","width","height","fillRule","d","id","a","connectWallet","Loading","Post","result","content","item_hash","ref","address","moment","unix","time","fromNow","body","title","Posts","useState","setResult","localWalletAddress","setLocalWalletAddress","load","WalletAddress","AlephAccount","aggregates","fetch_one","account","BREADDITCOMMUNITY","posts","get_posts","refs","response","useEffect","loading","map","post","alephAccount","CreatePost","setBody","communityHash","setCommunityHash","bodyEmpty","setBodyEmpty","send","setIsLoading","submit","then","res","console","log","window","location","catch","error","isLoading","required","placeholder","value","onChange","e","target","type","disabled","CreateComment","isLoggedIn","setIsLoggedIn","post_hash","Comment","PostPage","commentResult","setCommentResult","useParams","hashes","commentResponse","commentReady","setCommentReady","undefined","community","UserPage","accountRes","setAccountRes","addresses","postResult","CreateCommunity","name","setName","communityDesc","setCommunityDesc","tempURL","substring","lastIndexOf","checkLoggedin","CommunityPage","communities","setCommunities","isFollowing","setIsFollowing","localAddress","setLocalAddress","communityResult","setCommunityResult","temp","includes","desc","indexOf","splice","LocalAddress","LocalAlephAccount","reload","BrowseCommunities","NotFound404","App","setWeb3","setAlephAccount","setWalletAddress","createPostModal","connectWeb3","web3","eth","getAccounts","accounts","ariaHideApp","style","overlay","isOpen","onRequestClose","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","preventDefault","ethereum","Web3","enable","isConnected","from_provider","currentProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef25d0b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav(props) {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"nav\">\r\n          <Link className=\"app-name\" to='/'>BREADDIT</Link>\r\n            {\r\n              props.walletAddress ? <div className='profile-options'>\r\n                <Link className='profile-link' to={`/user/${props.walletAddress}`}>\r\n                  <div className='profile'>\r\n                    <img className='pfp' src={`https://robohash.org/${props.walletAddress}.png?bgset=bg1`} alt='profile'></img>\r\n                    <button className=\"account\" href=\"#\">{props.walletAddress.slice(0,7) + `...` + props.walletAddress.slice(props.walletAddress.length - 6, props.walletAddress.length)}</button>\r\n                  </div>\r\n                </Link>\r\n                <hr/>\r\n                <div className='nav-buttons'>\r\n                  <button className='create-button' onClick={()=>props.setCreatePostModal(true)}><svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\"><path fillRule=\"evenodd\" d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"/></svg></button>\r\n                  <Link className='create-button1' to='/CreateCommunity'><svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"24px\" height=\"24px\"><path className=\"cls-1\" d=\"M448,191.71H435.2v-89.6a64,64,0,0,0-64-64H64a64,64,0,0,0-64,64V379.16A17.78,17.78,0,0,0,17.92,397a17.42,17.42,0,0,0,12.45-5.25L76.8,345.31H179.2v12.8a64,64,0,0,0,64,64h192l46.42,46.51a17.42,17.42,0,0,0,12.46,5.26A17.78,17.78,0,0,0,512,456.06V255.71A64,64,0,0,0,448,191.71Zm-268.8,64v64H66.2l-7.5,7.5-33.1,33.1V102.11A38.44,38.44,0,0,1,64,63.71H371.2a38.44,38.44,0,0,1,38.4,38.4v89.6H243.2A64,64,0,0,0,179.2,255.71Zm307.2,51v130.5L453.32,404l-7.5-7.52H243.2a38.44,38.44,0,0,1-38.4-38.4V255.71a38.44,38.44,0,0,1,38.4-38.4H448a38.44,38.44,0,0,1,38.4,38.4Zm-89.6-38.16a12.8,12.8,0,0,1-12.8,12.8H307.2a12.8,12.8,0,1,1,0-25.6H384A12.8,12.8,0,0,1,396.8,268.51Zm0,38.4a12.8,12.8,0,0,1-12.8,12.8H307.2a12.8,12.8,0,1,1,0-25.6H384A12.8,12.8,0,0,1,396.8,306.91Zm0,38.4a12.8,12.8,0,0,1-12.8,12.8H307.2a12.8,12.8,0,1,1,0-25.6H384A12.8,12.8,0,0,1,396.8,345.31Z\"/></svg></Link>\r\n                  {/* <Link to='/community/ee48adeeac1e149ab0dc58e7aa04bd82ec8f096bde342be789b02d78b0763e37'>go to BreadditTest</Link> */}\r\n                </div>\r\n                <Link className='submitForm noUnderline' to='/browsecommunities'>Browse Communities</Link>\r\n              </div>\r\n              :\r\n              <button className=\"account account-btn\" aria-current=\"page\" href=\"#\" onClick={async()=>{props.connectWallet()}}>Connect Wallet</button>\r\n            }\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction Loading() {\r\n  return<div className=\"loadingio-spinner-double-ring-58z77zb2x9l\"><div className=\"ldio-plghun5gfo\">\r\n  <div></div>\r\n  <div></div>\r\n  <div><div></div></div>\r\n  <div><div></div></div>\r\n  </div></div>;\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Loading from './Loading'\r\n\r\n/* \r\n    UPVOTE\r\n    DOWNVOTE\r\n    SUBREDDIT\r\n    POSTER\r\n    COMMENTS\r\n */\r\n\r\nfunction Post(props) {\r\n\r\n    const truncate = ()=>{\r\n        if(props.result.ref.length > 30){\r\n            return `${props.result.ref.slice(0,5)}...${props.result.ref.slice(props.result.ref.length - 6, props.result.ref.length)}`\r\n        }else{\r\n            return props.result.ref\r\n        }\r\n    }\r\n\r\n  return<React.Fragment>\r\n      {!props.result.content? <Loading/>:\r\n        <div className='post'>\r\n                <div className='vote-container'>\r\n                    {/* <button className='vote upvote' onClick={()=>{}}><svg width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20.2755 16.6636V30H9.72967V16.6586V16.4516L9.58337 16.3052L9.57837 16.3002L9.43194 16.1538H9.22493H1.13299L14.8693 1.23456L28.858 16.1538H20.7853H20.5783L20.4318 16.3002L20.4269 16.3051L20.4221 16.3099L20.2755 16.4564V16.6636Z\"/></svg></button>\r\n                    <div className='net-vote'>0</div>\r\n                    <button className='vote downvote' onClick={()=>{}}><svg width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20.2755 14.3364V1H9.72967V14.3414V14.5484L9.58337 14.6948L9.57837 14.6998L9.43194 14.8462H9.22493H1.13299L14.8693 29.7654L28.858 14.8462H20.7853H20.5783L20.4318 14.6998L20.4269 14.6949L20.4221 14.6901L20.2755 14.5436V14.3364Z\"/></svg></button> */}\r\n                </div>\r\n                <hr className='vote-divider'></hr>\r\n                <Link className='post-link' to={`/post/${props.result.item_hash}`}>\r\n                    <div className='post-content'>\r\n                        <div className='post-metadata'>\r\n                            <span className='post-subreddit'>{truncate()}</span>\r\n                            <span className='post-credit'>{` - Posted by ` + props.result.address.slice(0,5) + `...` + props.result.address.slice(props.result.address.length - 4, props.result.address.length) + ` • ` + moment.unix(props.result.time).fromNow() }</span>\r\n                        </div>\r\n                        <span className='post-title'>{props.result.content.body.title}</span>\r\n                    </div>\r\n                </Link>\r\n        </div>\r\n      }\r\n        </React.Fragment>;\r\n}\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { posts, aggregates } from 'aleph-js'\r\nimport Post from './Post'\r\nimport Loading from './Loading'\r\n\r\nfunction Posts(props) {\r\n    const [result, setResult] = useState([])\r\n    const [localWalletAddress, setLocalWalletAddress] = useState(props.walletAddress);\r\n\r\n    const load = async ()=>{\r\n        try{\r\n            if(!localWalletAddress){\r\n                const {WalletAddress, AlephAccount} = await props.connectWallet()\r\n                let account = await aggregates.fetch_one(WalletAddress, 'BREADDIT')\r\n                if(account.BREADDITCOMMUNITY.length>=1){\r\n                    const response = await posts.get_posts('BREADDITPOST', {refs:account.BREADDITCOMMUNITY})\r\n                    setLocalWalletAddress(WalletAddress)\r\n                    setResult(response.posts)\r\n                } else {\r\n                    const response = await posts.get_posts('BREADDITPOST')\r\n                    setResult(response.posts)}\r\n            }else if(localWalletAddress){\r\n                let account = await aggregates.fetch_one(localWalletAddress, 'BREADDIT')\r\n                if(account.BREADDITCOMMUNITY.length>=1){\r\n                    const response = await posts.get_posts('BREADDITPOST', {refs:account.BREADDITCOMMUNITY})\r\n                    setResult(response.posts)\r\n                } else {\r\n                    const response = await posts.get_posts('BREADDITPOST')\r\n                    setResult(response.posts)}\r\n            }\r\n        }catch{\r\n            const response = await posts.get_posts('BREADDITPOST')\r\n            setResult(response.posts)\r\n        }\r\n    }\r\n    \r\n    const loading = ()=>{\r\n        if (result.length === 0) return <Loading/>\r\n    }\r\n\r\n    useEffect(()=>{\r\n        load()\r\n    },[])\r\n\r\n\r\n  return <div className='posts'>\r\n      {loading()}\r\n      {result.map((post)=><Post key={post.item_hash} walletAddress={localWalletAddress} alephAccount={props.alephAccount} result={post}/>)}\r\n  </div>;\r\n}\r\n\r\nexport default Posts;\r\n","import {posts} from \"aleph-js\"\r\nimport React, { useState } from \"react\"\r\nimport Loading from './Loading'\r\n\r\nfunction CreatePost(props) {\r\n\r\n    const [body, setBody] = useState({\r\n        'title':'',\r\n        'body':'',\r\n    })\r\n    const [communityHash, setCommunityHash] = useState('');\r\n    const [bodyEmpty, setBodyEmpty] = useState(true)\r\n    const send = async ()=>{\r\n        if(!props.walletAddress) {\r\n            await props.connectWallet()\r\n            await send()\r\n        }\r\n        else if(communityHash === '' || body.title === ''){\r\n            setBodyEmpty(true)\r\n        } else{\r\n            setBodyEmpty(false)\r\n            props.setIsLoading(true)\r\n            await posts.submit(\r\n                props.alephAccount.address,\r\n                'BREADDITPOST',\r\n                {'body': body\r\n            },\r\n            {\r\n                'account': props.alephAccount,\r\n                'channel': 'BREADDIT',\r\n                'ref': communityHash,\r\n                'api_server': 'https://api2.aleph.im'\r\n            }\r\n            ).then((res)=>{\r\n                console.log(res);\r\n                props.setIsLoading(false)\r\n                window.location.href = `/post/${res.item_hash}`\r\n            }).catch((error)=>{\r\n                props.setIsLoading(false)\r\n                console.error(error)\r\n            })\r\n        }\r\n    }\r\n    return <div className='createPost'>\r\n        {props.isLoading? <div className=\"createPost-load\">\r\n                <Loading/>\r\n                <span className=\"loading-text\">Waiting for wallet signature</span>\r\n            </div>\r\n            :<React.Fragment>\r\n                <h3>Create a post</h3>\r\n                <hr></hr>\r\n                <form className=\"createPostForm\">\r\n                    <input required placeholder=\"Community Hash\" className=\"\" value={communityHash} onChange={(e)=>{\r\n                        setCommunityHash(e.target.value)\r\n                        if(e.target.value === ''){\r\n                            setBodyEmpty(true)\r\n                        }else if(e.target.value.length>0 && body.title.length>0) setBodyEmpty(false)}}></input>\r\n                    <div className=\"text-fields\">\r\n                        <input className=\"\" type=\"text\" value={body.title} placeholder=\"Title\" onChange={(e)=>{\r\n                            setBody({\r\n                                'title':e.target.value,\r\n                                'body':body.body})\r\n                                if(e.target.value.length === 0){\r\n                                    setBodyEmpty(true)\r\n                                }else if(e.target.value.length>0 && communityHash.length>0)setBodyEmpty(false)}} required></input>\r\n                        <textarea className=\"\" placeholder=\"Text (optional)\" value={body.body} onChange={(e)=>{setBody({'title':body.title, 'body':e.target.value})}}></textarea>\r\n                    <button disabled={bodyEmpty} className=\"\" type=\"button\" onClick={async()=>{send()}} value=\"Post\">Post</button>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>}\r\n    </div>;\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport {posts} from \"aleph-js\"\r\n\r\n// walletAddress\r\n// post_hash\r\n\r\nfunction CreateComment(props) {\r\n    const [body, setBody] = useState('');\r\n    const [bodyEmpty, setBodyEmpty] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const send = async ()=>{\r\n        if(!props.walletAddress) {\r\n            await props.connectWallet()\r\n            await send()\r\n        }else{\r\n            posts.submit(\r\n                props.alephAccount.address,\r\n                'BREADDITCOMMENT',\r\n                {'body': body\r\n            },\r\n            {\r\n                'account': props.alephAccount,\r\n                'channel': 'BREADDIT',\r\n                'ref': props.post_hash,\r\n                'api_server': 'https://api2.aleph.im'\r\n            }\r\n            ).then(()=>{\r\n                window.location.href=`/post/${props.post_hash}`\r\n            }).catch(error=>{\r\n                console.log('couldnt post' + error);\r\n            })\r\n        }\r\n    }\r\n    const checkLoggedin = ()=>{\r\n        if(!props.walletAddress) {} else{\r\n            setIsLoggedIn(true)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        checkLoggedin()\r\n    },[])\r\n  return <React.Fragment>\r\n        {isLoggedIn? <form className=\"createCommentForm\">\r\n            <textarea type='text' value={body} placeholder=\"Post a comment\" onChange={(e)=>{\r\n                setBody(e.target.value)\r\n                if(e.target.value.length === 0) {setBodyEmpty(true)} else setBodyEmpty(false)\r\n                }}></textarea>\r\n            <button className=\"submitForm\" type=\"button\" onClick={()=>{send()}} disabled={bodyEmpty}>POST</button>\r\n        </form>:''\r\n        }\r\n  </React.Fragment>;\r\n}\r\n\r\nexport default CreateComment;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction Comment(props) {\r\n  return <div className='postPage comment'>\r\n            <span className='post-credit'> {props.result.address.slice(0,5) + `...` + props.result.address.slice(props.result.address.length - 4, props.result.address.length) + ` • ` + moment.unix(props.result.time).fromNow() } </span>\r\n            <span className='comment-body'>{props.result.content.body}</span>\r\n        </div>\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport { posts } from 'aleph-js'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react';\r\nimport moment from 'moment'\r\nimport Loading from './Loading'\r\nimport CreateComment from './CreateComment';\r\nimport Comment from './Comment'\r\n\r\nfunction PostPage(props) {\r\n    const [result, setResult] = useState({});\r\n    const [commentResult, setCommentResult] = useState({})\r\n    const { item_hash } = useParams()\r\n    const load = async()=>{\r\n        if(!props.walletAddress) await props.connectWallet()\r\n        const response = await posts.get_posts('BREADDITPOST', { hashes:[item_hash]})\r\n        setResult(response.posts[0])\r\n        const commentResponse = await posts.get_posts('BREADDITCOMMENT', {refs:[item_hash]})\r\n        setCommentResult(commentResponse.posts)\r\n    }\r\n    useEffect(()=>{\r\n        load()\r\n    },[])\r\n    const [commentReady, setCommentReady] = useState(false);\r\n    useEffect(()=>{\r\n        if(commentResult[0] !== undefined){\r\n            if(commentResult[0].content !== undefined){\r\n                setCommentReady(true)\r\n            }\r\n        }\r\n    },[commentResult])\r\n\r\n  return <div>\r\n      {\r\n          !result.content? <Loading/>:\r\n          <React.Fragment>\r\n            <div className='postPage'>\r\n                <div className='post-metadata'>\r\n                    <span className='post-subreddit'>{result.content.body.community}</span>\r\n                    <span className='post-credit'>{` - Posted by ` + result.address.slice(0,5) + `...` + result.address.slice(result.address.length - 4, result.address.length) + ` • ` + moment.unix(result.time).fromNow() }</span>\r\n                </div>\r\n                <span className='postPage-title'>{result.content.body.title}</span>\r\n                <span className='postPage-body'>{result.content.body.body}</span>\r\n            </div>\r\n            <CreateComment post_hash={item_hash} walletAddress={props.walletAddress} alephAccount={props.alephAccount} post_hash={item_hash}/>\r\n            {commentReady? commentResult.map((post)=><Comment key={post.item_hash} result={post}/>):''}\r\n          </React.Fragment>\r\n      }\r\n  </div>;\r\n}\r\n\r\nexport default PostPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { aggregates, posts } from 'aleph-js'\r\nimport Loading from './Loading'\r\nimport Post from './Post';\r\n\r\nfunction UserPage(props) {\r\n\r\n    const { account } = useParams()\r\n    const [accountRes, setAccountRes] = useState({});\r\n    const [result, setResult] = useState([{}]);\r\n\r\n    const load = async ()=>{\r\n      if(!props.walletAddress) await props.connectWallet()\r\n      const res = await aggregates.fetch_one(account, 'BREADDIT')\r\n      setAccountRes(res)\r\n      const postResult = await posts.get_posts('BREADDITPOST', {addresses:[account]})\r\n      setResult(postResult.posts)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      load()\r\n    },[])\r\n\r\n  return <React.Fragment>\r\n  {!accountRes.BREADDITCOMMUNITY? <Loading/>: <div>\r\n  <div className='userPage'>\r\n    <img className='userPicture' src={`https://robohash.org/${account}.png?bgset=bg1`} alt='profilePicture'/>\r\n    <span className='userID' >{account}</span> \r\n    <span className='following'>Following {accountRes.BREADDITCOMMUNITY.length} communities</span>\r\n    {/* <div className='followingCommunities'>\r\n      {accountRes.BREADDITCOMMUNITY.map((n)=><span className='followingCommunity'>{n}</span>)}\r\n    </div> */}\r\n  </div>\r\n  <div>\r\n    {result.map((post)=><Post key={post.item_hash} walletAddress={props.walletAddress} alephAccount={props.alephAccount} result={post}/>)}\r\n  </div>\r\n  </div>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport default UserPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { posts, store } from 'aleph-js'\r\n\r\nfunction CreateCommunity(props) {\r\n    const [name, setName] = useState('');\r\n    const [bodyEmpty, setBodyEmpty] = useState(true)\r\n    const [communityPhoto, setCommunityPhoto] = useState(undefined);\r\n    const [communityDesc, setCommunityDesc] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const send = async ()=>{\r\n        if(!props.walletAddress) {\r\n            await props.connectWallet()\r\n            await send()\r\n        }else{\r\n            await posts.submit(\r\n                props.alephAccount.address,\r\n                'BREADDITCOMMUNITY',\r\n                {'name': name,\r\n                'desc':communityDesc\r\n            },\r\n            {\r\n                'account': props.alephAccount,\r\n                'channel': 'BREADDIT',\r\n                'api_server': 'https://api2.aleph.im'\r\n            }\r\n            ).then((res)=>{\r\n                const tempURL = window.location.href\r\n                window.location.href = `${tempURL.substring(0, tempURL.lastIndexOf('/'))}/community/${res.item_hash}`\r\n            }).catch(error=>{\r\n                console.log('couldnt post' + error);\r\n            })\r\n        }\r\n    }\r\n    const checkLoggedin = async ()=>{\r\n        if(!props.walletAddress) {} else{\r\n            setIsLoggedIn(true)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        checkLoggedin()\r\n    },[])\r\n    return <React.Fragment>\r\n{isLoggedIn? <React.Fragment>\r\n    <form className=\"createCommunityForm\">\r\n        <input required type='text' value={name} className='communityName' placeholder=\"Name your community\" onChange={(e)=>{\r\n            setName(e.target.value)\r\n            if(e.target.value.length === 0) {setBodyEmpty(true)} else setBodyEmpty(false)\r\n            }}></input>\r\n        <textarea required value={communityDesc} className='textareaForm' placeholder='Community description' onChange={(e)=>{\r\n            setCommunityDesc(e.target.value)\r\n        }}></textarea>\r\n        <button className='submitForm' type=\"button\" onClick={()=>{send()}} disabled={bodyEmpty}>Create Community</button>\r\n    </form>\r\n</React.Fragment>:''\r\n}\r\n</React.Fragment>;\r\n}\r\n\r\nexport default CreateCommunity;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { aggregates, posts } from 'aleph-js';\r\nimport Post from './Post'\r\n\r\nfunction CommunityPage(props) {\r\n    \r\n    const { community } = useParams()\r\n    const [communities, setCommunities] = useState([]);\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [localAddress, setLocalAddress] = useState({});\r\n    const [result, setResult] = useState([{}]);\r\n    const [communityResult, setCommunityResult] = useState('');\r\n\r\n    const load = async()=>{\r\n    if(!props.walletAddress){\r\n      const{WalletAddress, AlephAccount} = await props.connectWallet()\r\n      setLocalAddress({'LocalAddress':WalletAddress, 'LocalAlephAccount':AlephAccount})\r\n      const temp = await aggregates.fetch_one(WalletAddress, 'BREADDIT')\r\n      setCommunities(temp.BREADDITCOMMUNITY)\r\n      if(temp.BREADDITCOMMUNITY.includes(community)) setIsFollowing(true)\r\n      const res = await posts.get_posts('BREADDITCOMMUNITY', {hashes:[community]})\r\n      setCommunityResult(res.posts[0])\r\n      const response = await posts.get_posts('BREADDITPOST', {refs:[community]})\r\n      setResult(response.posts)\r\n    }else if(props.walletAddress){\r\n      setLocalAddress({'LocalAddress':props.walletAddress, 'LocalAlephAccount':props.alephAccount})\r\n      const temp = await aggregates.fetch_one(props.walletAddress, 'BREADDIT')\r\n      setCommunities(temp.BREADDITCOMMUNITY)\r\n      if(temp.BREADDITCOMMUNITY.includes(community)) setIsFollowing(true)\r\n      const res = await posts.get_posts('BREADDITCOMMUNITY', {hashes:[community]})\r\n      setCommunityResult(res.posts[0])\r\n      const response = await posts.get_posts('BREADDITPOST', {refs:[community]})\r\n      setResult(response.posts)\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n      if(props.walletAddress===undefined){props.connectWallet()}\r\n      load()\r\n    },[])\r\n\r\n    // const followButton = ()=>{\r\n\r\n    //   switch(isFollowing){\r\n    //     case true:\r\n    //       return <button className='submitForm' onClick={async()=>{\r\n    //         await aggregates.submit(\r\n    //           localAddress.LocalAddress,\r\n    //           'BREADDIT', \r\n    //           {'BREADDITCOMMUNITY': [community, ...communities]}, \r\n    //           {'account': localAddress.LocalAlephAccount, 'channel': 'BREADDIT'}\r\n    //         )\r\n    //         window.location.reload()\r\n    //       }}>Following</button>\r\n    //     case false:\r\n    //       return <button className='submitForm' onClick={async()=>{\r\n    //         await aggregates.submit(\r\n    //           localAddress.LocalAddress,\r\n    //           'BREADDIT', \r\n    //           {'BREADDITCOMMUNITY': [community, ...communities]}, \r\n    //           {'account': localAddress.LocalAlephAccount, 'channel': 'BREADDIT'}\r\n    //         )\r\n    //         window.location.reload()\r\n    //       }}>Follow</button>\r\n    //     default:\r\n    //       return <div></div>\r\n    //   }\r\n    // }\r\n\r\n  return <div>\r\n    {/* <div className='communityDetails'>\r\n    </div> */}\r\n    {communityResult.item_hash? \r\n    <div className='userPage'>\r\n      <span className='userID'>{communityResult.content.name}</span>\r\n      <span className='following'>{communityResult.item_hash}</span>\r\n      <span className='following'>{communityResult.content.desc}</span>\r\n      <button className='submitForm'value={isFollowing? 'Following': 'Follow'} onClick={async()=>{\r\n        if(isFollowing){\r\n          console.log(communities)\r\n          const temp = communities.indexOf(community)\r\n          if (temp > -1) {setCommunities(communities.splice(temp, 1))}\r\n          await aggregates.submit(\r\n            localAddress.LocalAddress,\r\n            'BREADDIT', \r\n            {'BREADDITCOMMUNITY': communities}, \r\n            {'account': localAddress.LocalAlephAccount, 'channel': 'BREADDIT'}\r\n          )\r\n          window.location.reload()\r\n        }else{\r\n          console.log(isFollowing)\r\n          await aggregates.submit(\r\n            localAddress.LocalAddress,\r\n            'BREADDIT', \r\n            {'BREADDITCOMMUNITY': [community, ...communities]}, \r\n            {'account': localAddress.LocalAlephAccount, 'channel': 'BREADDIT'}\r\n          )\r\n          window.location.reload()}\r\n        }}>{isFollowing? 'Following': 'Follow'}</button>\r\n    </div>:''}\r\n    {result.map((post)=><Post key={post.item_hash} walletAddress={props.walletAddress} alephAccount={props.alephAccount} result={post}/>)}\r\n  </div>;\r\n}\r\n\r\nexport default CommunityPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { posts } from 'aleph-js'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './Loading';\r\n\r\nfunction BrowseCommunities(props) {\r\n\r\n    const [result, setResult] = useState([{}]);\r\n\r\n    const load = async()=>{\r\n        await props.connectWallet()\r\n        const res = await posts.get_posts('BREADDITCOMMUNITY')\r\n        setResult(res.posts)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        load()\r\n    },[])\r\n\r\n  return <div>\r\n      {result.map((post)=><Link className='noUnderline' to={`/community/${post.item_hash}`}>{post.content?\r\n    <div className='followingCommunity'>\r\n    <span className='userID'>{post.content.name}</span><br/>\r\n    <span className='comment-body'>{post.item_hash}</span>\r\n    </div>:<Loading/>}</Link>)}\r\n  </div>;\r\n}\r\n\r\nexport default BrowseCommunities;\r\n","export default __webpack_public_path__ + \"static/media/404.dbb9fcae.png\";","import React from 'react';\r\nimport img from '../icons/404.png'\r\n\r\nfunction NotFound404() {\r\n  return <div className='App'>\r\n      {/* <img src={img} alt='404'/> */}\r\n      <span className='userID'>\r\n        404 Not found\r\n      </span>\r\n  </div>;\r\n}\r\n\r\nexport default NotFound404;\r\n","import { useState } from 'react';\r\nimport { aggregates } from 'aleph-js';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\r\nimport Modal from 'react-modal'\r\nimport './App.css';\r\nimport Nav from './components/Nav';\r\nimport Posts from './components/Posts'\r\nimport CreatePost from './components/CreatePost';\r\nimport PostPage from './components/PostPage';\r\nimport UserPage from './components/UserPage';\r\nimport CreateCommunity from './components/CreateCommunity';\r\nimport CommunityPage from './components/CommunityPage';\r\nimport BrowseCommunities from './components/BrowseCommunities';\r\nimport NotFound404 from './components/NotFound404';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const [web3, setWeb3] = useState()\r\n  const [alephAccount, setAlephAccount] = useState()\r\n  const [walletAddress, setWalletAddress] = useState()\r\n  const [createPostModal, setCreatePostModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const modalStyle = {\r\n    content:{\r\n      'backgroundColor': '#214a4d',\r\n      'borderRadius': '15px',\r\n      'border': '0px',\r\n      'display': 'flex',\r\n      'justifyContent': 'center',\r\n      'alignItems':'center',\r\n      'width': 'fit-content',\r\n      'height': 'fit-content',\r\n      'padding': '40px 20px',\r\n      'overflow':'hidden',\r\n      'top': '50%',\r\n      'left': '50%',\r\n      'transform': 'translate(-50%, -50%)'\r\n    },\r\n    overlay:{\r\n      'backgroundColor': 'rgb(0,0,0, 0.6)'\r\n    }\r\n  }\r\n\r\n  const connectWallet = async (e) => {\r\n    try{\r\n      const { alephAccount, web3 } = await props.connectWeb3(e)\r\n      const accounts = await web3.eth.getAccounts()\r\n  \r\n      await aggregates.fetch_one(accounts[0], 'BREADDIT').catch(async(e)=>{\r\n          console.log(e);\r\n          await aggregates.submit(\r\n            accounts[0],\r\n            'BREADDIT',\r\n            {'BREADDITCOMMUNITY':[]},\r\n            {account:alephAccount}\r\n          )\r\n      })\r\n  \r\n      setWeb3(web3)\r\n      setAlephAccount(alephAccount)\r\n      setWalletAddress(accounts[0])\r\n\r\n      return {\r\n        WalletAddress: accounts[0],\r\n        AlephAccount: alephAccount\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Modal ariaHideApp={false} style={modalStyle} isOpen={createPostModal} onRequestClose={()=>{setCreatePostModal(false)}}>\r\n          <CreatePost isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount}/>\r\n        </Modal>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <Posts connectWallet={connectWallet} setIsLoading={setIsLoading} setCreatePostModal={setCreatePostModal} walletAddress={walletAddress} alephAccount={alephAccount}/>\r\n          </Route>\r\n          <Route exact path='/post/:item_hash'>\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <PostPage walletAddress={walletAddress} alephAccount={alephAccount} connectWallet={connectWallet}/>\r\n          </Route>\r\n          <Route exact path='/user/:account'>\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <UserPage connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} />\r\n          </Route>\r\n          <Route exact path='/CreateCommunity'>\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <CreateCommunity walletAddress={walletAddress} alephAccount={alephAccount} connectWallet={connectWallet}/>\r\n          </Route>\r\n          <Route exact path='/community/:community'>\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <CommunityPage walletAddress={walletAddress} alephAccount={alephAccount} connectWallet={connectWallet}/>\r\n          </Route>\r\n          <Route exact path='/browsecommunities'>\r\n            <Nav isLoading={isLoading} setIsLoading={setIsLoading} connectWallet={connectWallet} walletAddress={walletAddress} alephAccount={alephAccount} setCreatePostModal={setCreatePostModal}/>\r\n            <BrowseCommunities connectWallet={connectWallet}/>\r\n          </Route>\r\n          <Route exact path='/404'>\r\n            <NotFound404 connectWallet={connectWallet}/>\r\n          </Route>\r\n          <Redirect to='/404'/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Web3 from 'web3'\r\nimport { ethereum } from 'aleph-js'\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst connectWeb3 = async (e) => {\r\n  if (e)\r\n  e.preventDefault()\r\n  \r\n  var web3, alephAccount;\r\n    \r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum);\r\n    try {\r\n      // Request account access if needed\r\n      await window.ethereum.enable()\r\n      // Accounts now exposed\r\n      console.log(\"Web 3 Connected...\")\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  // Legacy dapp browsers...\r\n  else if (window.web3) {\r\n    // Use Mist/MetaMask's provider.\r\n    web3 = window.web3;\r\n    console.log(\"Injected web3 detected.\");\r\n  }\r\n\r\n  else{\r\n    window.location.href = 'https://metamask.io/download/'\r\n  }\r\n  \r\n  if (window.ethereum.isConnected()) {\r\n    try {\r\n      alephAccount = await ethereum.from_provider(window['ethereum'] || window.web3.currentProvider)\r\n    } catch(error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  \r\n  return {\r\n    alephAccount: alephAccount,\r\n    web3: web3\r\n  }\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App connectWeb3={connectWeb3} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n  \r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n  reportWebVitals();\r\n  "],"sourceRoot":""}